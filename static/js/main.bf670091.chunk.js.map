{"version":3,"sources":["components/Header.tsx","components/CreateArea.tsx","components/Footer.tsx","components/Note.tsx","components/App.tsx","index.tsx"],"names":["Header","CreateArea","onAdd","useState","noteHead","noteBody","note","setNote","handleChange","event","target","name","value","prevValue","onChange","placeholder","rows","onClick","preventDefault","Footer","year","Date","getFullYear","Note","id","title","content","onDelete","className","App","React","notes","setNotes","deleteNote","prevNotes","filter","currItem","index","console","log","map","noteID","ReactDOM","render","document","getElementById"],"mappings":"4MAUeA,EARA,WACX,OACI,iCACI,2C,cCqDGC,EAhDI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAA6B,EACvBC,mBAAS,CAC7BC,SAAU,GACVC,SAAU,KAHiC,mBACxCC,EADwC,KAClCC,EADkC,KAKzCC,EAAe,SAACC,GAA+D,IAAD,EACxDA,EAAMC,OAAtBC,EADwE,EACxEA,KAAMC,EADkE,EAClEA,MACdL,GAAQ,SAAAM,GAAS,kCACVA,GADU,kBAEZF,EAAOC,QAehB,OACI,8BACI,iCACI,uBACIE,SAAUN,EACVG,KAAK,WACLI,YAAY,QACZH,MAAON,EAAKF,WAEhB,0BACIU,SAAUN,EACVG,KAAK,WACLI,YAAY,iBACZC,KAAM,EACNJ,MAAON,EAAKD,WAEhB,wBAAQY,QAzBD,SAACR,GAChBP,EAAMI,GACNC,EAAQ,CACJH,SAAU,GACVC,SAAU,KAEdI,EAAMS,kBAmBE,uBCvCDC,EATF,WACT,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACI,iCACI,kDAAgBF,QCgBbG,EAdF,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,GAAIC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAIhC,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKH,IACL,4BAAIC,IACJ,wBAAQT,QAPI,WAChBU,EAASH,IAML,wB,MCkCGK,MA1Cf,WAAgB,IAAD,EACaC,IAAM3B,SAAsB,IADzC,mBACN4B,EADM,KACCC,EADD,KAab,SAASC,EAAWT,GAClBQ,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GACjC,OAAOA,IAAUb,QAGrBc,QAAQC,IAAI,iBAAmBf,GAIjC,OADAc,QAAQC,IAAIR,GAEV,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAY7B,MAtBhB,SAAiBI,GAIf0B,GAAS,SAACE,GAAD,4BACHA,GADG,CACQ5B,UAkBdyB,EAAMS,KAAI,SAAClC,EAAMmC,GAChB,OACE,cAAC,EAAD,CAEEjB,GAAIiB,EACJf,QAASpB,EAAKD,SACdoB,MAAOnB,EAAKF,SACZuB,SAAUM,GAJLQ,MAOX,cAAC,EAAD,QCzCNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf670091.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Keeper</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nexport interface noteProps {\r\n    noteHead: string;\r\n    noteBody: string;\r\n}\r\nexport interface CreateAreaProps {\r\n    // onAdd(note: string[]): void;\r\n    onAdd(note: noteProps): void;\r\n}\r\nconst CreateArea = ({ onAdd }: CreateAreaProps) => {\r\n    const [note, setNote] = useState({\r\n        noteHead: \"\",\r\n        noteBody: \"\"\r\n    })\r\n    const handleChange = (event: { target: HTMLInputElement | HTMLTextAreaElement }) => {\r\n        const { name, value } = event.target;\r\n        setNote(prevValue => ({\r\n            ...prevValue,\r\n            [name]: value\r\n        }));\r\n        // console.log(name);\r\n        // console.log(value);\r\n        // console.log(note);\r\n    }\r\n    const submitNote = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onAdd(note)\r\n        setNote({\r\n            noteHead: \"\",\r\n            noteBody: \"\"\r\n        });\r\n        event.preventDefault();\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input\r\n                    onChange={handleChange}\r\n                    name=\"noteHead\"\r\n                    placeholder=\"Title\"\r\n                    value={note.noteHead}\r\n                />\r\n                <textarea\r\n                    onChange={handleChange}\r\n                    name=\"noteBody\"\r\n                    placeholder=\"Take a note...\"\r\n                    rows={3}\r\n                    value={note.noteBody}\r\n                />\r\n                <button onClick={submitNote}>Add</button>\r\n                {/* <button>Add</button> */}\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateArea;","import React from \"react\";\r\n\r\nconst Footer=() => {\r\n    const year = new Date().getFullYear();\r\n    return (\r\n        <footer>\r\n            <p>Copyright â“’ {year}</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\ninterface NoteProps {\r\n    id: number\r\n    title: string;\r\n    content: string;\r\n    onDelete(id: number): void\r\n}\r\nconst Note = ({ id, title, content, onDelete }: NoteProps) => {\r\n    const handleClick = () => {\r\n        onDelete(id)\r\n    }\r\n    return (\r\n        <div className=\"note\">\r\n            <h1>{title}</h1>\r\n            <p>{content}</p>\r\n            <button onClick={handleClick}>DELETE</button>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Note;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport CreateArea from \"./CreateArea\";\r\nimport { noteProps } from \"./CreateArea\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport \"../index.css\";\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = React.useState<noteProps[]>([]);\r\n\r\n\r\n  function addNote(note: noteProps) {\r\n    // setNotes((prevNotes) => {\r\n    //   return [...prevNotes, note];\r\n    // });\r\n    setNotes((prevNotes) => (\r\n      [...prevNotes, note]\r\n    ))\r\n  }\r\n\r\n  function deleteNote(id: number) {\r\n    setNotes((prevNotes) => {\r\n      return prevNotes.filter((currItem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n    console.log(\"Inside delete \" + id);\r\n  }\r\n\r\n  console.log(notes);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea onAdd={addNote} />\r\n      {notes.map((note, noteID) => {\r\n        return (\r\n          <Note\r\n            key={noteID}\r\n            id={noteID}\r\n            content={note.noteBody}\r\n            title={note.noteHead}\r\n            onDelete={deleteNote} />\r\n        );\r\n      })}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}